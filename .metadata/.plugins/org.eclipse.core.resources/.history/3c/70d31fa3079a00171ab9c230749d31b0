package com.bank.model;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class bankDAO {
	
	 private String jdbcURL;
	    private String jdbcUsername;
	    private String jdbcPassword;
	    private Connection jdbcConnection;
	     
	    public bankDAO(String jdbcURL, String jdbcUsername, String jdbcPassword) {
	        this.jdbcURL = jdbcURL;
	        this.jdbcUsername = jdbcUsername;
	        this.jdbcPassword = jdbcPassword;
	    }
	     
	    protected void connect() throws SQLException {
	        if (jdbcConnection == null || jdbcConnection.isClosed()) {
	            try {
	                Class.forName("com.mysql.jdbc.Driver");
	            } catch (ClassNotFoundException e) {
	                throw new SQLException(e);
	            }
	            jdbcConnection = DriverManager.getConnection(
	                                        jdbcURL, jdbcUsername, jdbcPassword);
	        }
	    }
	     
	    protected void disconnect() throws SQLException {
	        if (jdbcConnection != null && !jdbcConnection.isClosed()) {
	            jdbcConnection.close();
	        }
	    }
	     
	    public boolean newCustomer(model bank) throws SQLException {
	        String sql = "INSERT INTO customer_det (password,fname,lname,phone,email,address,amount) VALUES (?, ?, ?)";
	        connect();
	         
	        PreparedStatement statement = jdbcConnection.prepareStatement(sql);
	        statement.setString(1, bank.getPassword());
	        statement.setString(2, bank.getFname());
	        statement.setString(3, bank.getLname());
	        statement.setString(3, bank.getPhone());
	        statement.setString(3, bank.getEmail());
	        statement.setString(3, bank.getAddress());
	        statement.setString(3, bank.getAmount());
	         
	        boolean rowInserted = statement.executeUpdate() > 0;
	        statement.close();
	        disconnect();
	        return rowInserted;
	    }
	     
	    public List<model> listAllemp() throws SQLException {
	        List<model> listemp = new ArrayList<>();
	         
	        String sql = "SELECT * FROM empdet";
	         
	        connect();
	         
	        Statement statement = jdbcConnection.createStatement();
	        ResultSet resultSet = statement.executeQuery(sql);
	         
	        while (resultSet.next()) {
	            int id = resultSet.getInt("EmpID");
	            String name = resultSet.getString("EmpName");
	            String stream = resultSet.getString("EmpStream");
	            int number = resultSet.getInt("EmpSal");
	             
	            model emp = new model(id, name, stream, number);
	            listemp.add(emp);
	        }
	         
	        resultSet.close();
	        statement.close();
	         
	        disconnect();
	         
	        return listemp;
	    }
	     
	    public boolean deleteemp(model emp) throws SQLException {
	        String sql = "DELETE FROM empdet where EmpID = ?";
	         
	        connect();
	         
	        PreparedStatement statement = jdbcConnection.prepareStatement(sql);
	        statement.setInt(1, emp.getId());
	         
	        boolean rowDeleted = statement.executeUpdate() > 0;
	        statement.close();
	        disconnect();
	        return rowDeleted;     
	    }
	     
	    public boolean updateemp(model emp) throws SQLException {
	        String sql = "UPDATE empdet SET EmpName = ?, EmpStream = ?, EmpSal = ?";
	        sql += " WHERE EmpID = ?";
	        connect();
	         
	        PreparedStatement statement = jdbcConnection.prepareStatement(sql);
	        statement.setString(1, emp.getname());
	        statement.setString(2, emp.getstream());
	        statement.setInt(3, emp.getnumber());
	        statement.setInt(4, emp.getId());
	         
	        boolean rowUpdated = statement.executeUpdate() > 0;
	        statement.close();
	        disconnect();
	        return rowUpdated;     
	    }
	     
	    public model getemp(int id) throws SQLException {
	        model emp = null;
	        String sql = "SELECT * FROM empdet WHERE EmpID = ?";
	         
	        connect();
	         
	        PreparedStatement statement = jdbcConnection.prepareStatement(sql);
	        statement.setInt(1, id);
	         
	        ResultSet resultSet = statement.executeQuery();
	         
	        if (resultSet.next()) {
	            String name = resultSet.getString("EmpName");
	            String stream = resultSet.getString("EmpStream");
	            int number = resultSet.getInt("EmpSal");
	             
	            emp = new model(id, name, stream, number);
	        }
	         
	        resultSet.close();
	        statement.close();
	         
	        return emp;
	    }
}
